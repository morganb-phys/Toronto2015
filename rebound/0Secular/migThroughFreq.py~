import numpy as np
import rebound
import matplotlib.pyplot as plt
import numpy.random
import time
import reboundxf
from numpy import ndarray 
from mpl_toolkits.mplot3d import Axes3D

def integration(tmax,tau):  


    # Set up the integrator
    #---------------------------------------------------------------------

    rebound.reset()

    rebound.dt=0.1*np.sqrt(0.09100**3) 
    rebound.integrator='whfast'
    rebound.G=4.*np.pi**2
   
    # Add particles
    #---------------------------------------------------------------------

    K11 = rebound.Particle( m=0.950 )
    rebound.add( K11 )
    

    '''
    # Model I
    rebound.add( primary=K11, m=1.3122e-5, a=0.091089, anom=np.random.rand(1)*np.pi*2,
                 e=0.0149, omega=-0.83, inc=1.54, Omega=0. )  #K11b

    rebound.add( primary=K11, m=2.8744e-5, a=0.106522, anom=np.random.rand(1)*np.pi*2,
                 e=0.0064, omega=-0.67, inc=1.59, Omega=0.056 )  #K11c

    rebound.add( primary=K11, m=2.7806e-5, a=0.154241, anom=np.random.rand(1)*np.pi*2,
                 e=0.0158, omega=-2.54, inc=1.56, Omega=-0.576 )  #K11d

    rebound.add( primary=K11, m=3.3430e-5, a=0.193937, anom=np.random.rand(1)*np.pi*2,
                 e=0.0256, omega=-2.47, inc=1.55, Omega=-0.541 )  #K11e

    rebound.add( primary=K11, m=1.1248e-5, a=0.249489, anom=np.random.rand(1)*np.pi*2,
                 e=0.0180, omega=-1.91, inc=1.56, Omega=-0.559 )  #K11f

    rebound.add( primary=K11, m=5.6238e-5, a=0.463918, anom=np.random.rand(1)*np.pi*2,
                 e=0.2601, omega=-3.11, inc=1.57, Omega=-1.135 )  #K11g
    


    # Model II
    rebound.add( primary=K11, m=1.3122e-5, a=0.091087, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0209, omega=1.278, inc=1.54, Omega=0. )  #K11b

    rebound.add( primary=K11, m=2.8744e-5, a=0.106521, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0240, omega=1.528, inc=1.59, Omega=0.059 )  #K11c

    rebound.add( primary=K11, m=2.8744e-5, a=0.154233, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0153, omega=2.588, inc=1.56, Omega=-0.401 )  #K11d

    rebound.add( primary=K11, m=3.2805e-5, a=0.193926, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0201, omega=-3.041, inc=1.55, Omega=-0.384 )  #K11e

    rebound.add( primary=K11, m=1.3747e-5, a=0.249511, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0081, omega=-2.090, inc=1.56, Omega=-0.436 )  #K11f

    rebound.add( primary=K11, m=9.3729e-6, a=0.463924, #anom=np.random.rand(1)*np.pi*2,
                 e=0., inc=1.58, Omega=0.646 )  #K11g
    '''

    # Model III
    rebound.add( primary=K11, m=1.2497e-5, a=0.091088, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0166, omega=0.436, inc=1.54, Omega=0. )  #K11b

    rebound.add( primary=K11, m=2.8431e-5, a=0.106519, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0144, omega=0.983, inc=1.59, Omega=0.059 )  #K11c

    rebound.add( primary=K11, m=2.8431e-5, a=0.154234, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0080, omega=3.142, inc=1.56, Omega=-0.401 )  #K11d

    rebound.add( primary=K11, m=3.3118e-5, a=0.193924, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0180, omega=-2.553, inc=1.55, Omega=-0.384 )  #K11e

    rebound.add( primary=K11, m=1.3434e-5, a=0.249511, #anom=np.random.rand(1)*np.pi*2,
                 e=0.0112, omega=-1.751, inc=1.56, Omega=-0.436 )  #K11f

    rebound.add( primary=K11, m=3.1243e-6, a=0.463917, #anom=np.random.rand(1)*np.pi*2,
                 e=0., inc=1.58, Omega=0.646 )  #K11g


    '''
    rebound.add( primary=K11, m=1.00000e-3, a=5.000000, anom=np.random.rand(1)*np.pi*2,
                 e=0.0500, omega=np.random.rand(1)*np.pi*2,
                 inc=1.57, Omega=np.random.rand(1)*np.pi*2 )  #K11Jup1

    rebound.add( primary=K11, m=1.00000e-3, a=7.500000, anom=np.random.rand(1)*np.pi*2,
                 e=0.0360, omega=np.random.rand(1)*np.pi*2,
                 inc=1.59, Omega=np.random.rand(1)*np.pi*2 )  #K11Jup2
    '''
    rebound.move_to_com()
    ps = rebound.particles

    # Set up variables 
    #---------------------------------------------------------------------

    dt = rebound.dt 
    Noutputs = 10000
    NumPlanet = rebound.N-1
    times = np.linspace(0.,tmax,Noutputs)
    a = np.zeros((NumPlanet,Noutputs))
    e = np.zeros((NumPlanet,Noutputs))
    x = np.zeros((NumPlanet,Noutputs))
    y = np.zeros((NumPlanet,Noutputs))
    z = np.zeros((NumPlanet,Noutputs))
    step = 0

    # Set up Migration
    rebound.post_timestep_modifications = reboundxf.modify_elements()

    tauas = [0.,0.,0.,0.,0.,0.,0.,0.,tau]
    reboundxf.set_migration(tauas)
    

    # Write the semi-major axis and coordinates to a list for each planet
    #---------------------------------------------------------------------

    for i,time in enumerate(times):
        step += 1
        if step%100 == 0:
            print time
        
        rebound.integrate(time)

        for j in range(NumPlanet):
            a[j][i] = ps[j+1].calculate_orbit().a
            e[j][i] = ps[j+1].calculate_orbit().e
            x[j][i] = ps[j+1].x
            y[j][i] = ps[j+1].y
            z[j][i] = ps[j+1].z
    return a,e,x,y,z,times


# Call and time the function
#---------------------------------------------------------------------

tmax = 1000.
tau = -2.55e6

time1 = time.time()

a,e,x,y,z,times = integration(tmax,tau)

print time.time()-time1

print len(a)
print np.array(a[len(a)-1])

# Write to File
#---------------------------------------------------------------------
'''
FileName = 'data/tmax'+str(int(tmax))+'_tau'+str(int(tau))+'.txt'
Data = open(FileName,'a')

for i,time in list(enumerate(times,start=0)):
    for j in (range(len(a))):
        Data.write('\t'+' '+str(a[j][i])+' '+str(e[j][i])+' '+str(x[j][i])+' '+str(y[j][i])+'\n')
Data.write('\n')
Data.close()
'''

# plot
#---------------------------------------------------------------------
plt.rc('text', usetex=True)
plt.rc('font', **{'family':'serif','serif':['Helvetica']})


plt.figure()
plt.xlabel('Time (y)')
plt.ylabel('Semi-Major Axis (AU)')
plt.plot(times,a[0],label='k11b')
plt.plot(times,a[1],label='k11c')
plt.plot(times,a[2],label='k11d')
plt.plot(times,a[3],label='k11e')
plt.plot(times,a[4],label='k11f')
plt.plot(times,a[5],label='k11g')
#plt.plot(times,a[6],label='k11Jup1')
#plt.plot(times,a[7],label='k11Jup2')
plt.legend()

plt.figure()
plt.xlabel('Time (y)')
plt.ylabel('Eccentricity')
plt.plot(times,e[0],label='k11b')
plt.plot(times,e[1],label='k11c')
plt.plot(times,e[2],label='k11d')
plt.plot(times,e[3],label='k11e')
plt.plot(times,e[4],label='k11f')
plt.plot(times,e[5],label='k11g')
#plt.plot(times,e[6],label='k11Jup1')
#plt.plot(times,e[7],label='k11Jup2')
plt.legend()

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Orbit of the 6 Kepler-11 Planets and a Jupiter in the xy-Plane')
ax.scatter(x[0],y[0],z[0],'o',s=5,c='r',edgecolors='none', label='k11b')
ax.scatter(x[1],y[1],z[1],'o',s=5,c='c',edgecolors='none', label='k11c')
ax.scatter(x[2],y[2],z[2],'o',s=5,c='y',edgecolors='none', label='k11d')
ax.scatter(x[3],y[3],z[3],'o',s=5,c='g',edgecolors='none', label='k11e')
ax.scatter(x[4],y[4],z[4],'o',s=5,c='b',edgecolors='none', label='k11f')
ax.scatter(x[5],y[5],z[5],'o',s=5,c='m',edgecolors='none', label='k11g')
#plt.plot(x[6],y[6],'.',ms=1, label='k11Jup1')
#plt.plot(x[7],y[7],'.',ms=1, label='k11Jup2')
plt.legend()

plt.show()
